"use strict";(self.webpackChunksynalinks_website=self.webpackChunksynalinks_website||[]).push([[369],{8130:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>c});var s=i(4848),t=i(8453);const d={sidebar_position:2},o="Fake Embeddings",r={id:"api/embeddings/fake-embeddings",title:"Fake Embeddings",description:"Embeddings for testing purposes",source:"@site/docs/api/embeddings/fake-embeddings.md",sourceDirName:"api/embeddings",slug:"/api/embeddings/fake-embeddings",permalink:"/documentation/docs/api/embeddings/fake-embeddings",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apiSidebar",previous:{title:"Sentence Transformer Embeddings",permalink:"/documentation/docs/api/embeddings/sentence-embeddings"},next:{title:"Adding Custom Embeddings",permalink:"/documentation/docs/api/embeddings/custom-embeddings"}},a={},c=[{value:"Embeddings for testing purposes",id:"embeddings-for-testing-purposes",level:2},{value:"Usage",id:"usage",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"fake-embeddings",children:"Fake Embeddings"}),"\n",(0,s.jsx)(n.h2,{id:"embeddings-for-testing-purposes",children:"Embeddings for testing purposes"}),"\n",(0,s.jsx)(n.p,{children:"Fake Embeddings are an indispensable resource for ensuring the smooth and efficient testing of your applications. They generate a random vector of the specified dimension, making them perfect for simulating real-world embeddings during the testing phase. By incorporating Fake Embeddings into your testing pipelines, you can effectively evaluate the functionality of your applications without the need for actual embeddings."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import unittest\nfrom hybridagi import FakeEmbeddings\n\ndef test_embeddings():\n    emb = FakeEmbeddings(dim=250)\n    vector = emb.embed_text("hello world")\n    assert len(vector) == 250\n'})}),"\n",(0,s.jsx)(n.p,{children:"By integrating Fake Embeddings into your testing workflows, you can streamline your testing processes and ensure the robustness and reliability of your applications."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const t={},d=s.createContext(t);function o(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);